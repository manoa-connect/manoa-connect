// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  // for local development
  url      = env("DATABASE_URL")
  // for Vercel
  //url       = env("POSTGRES_URL_NON_POOLING")
  //directUrl = env("POSTGRES_URL_NON_POOLING")
}

enum Role {
  USER
  ADMIN
}

model User {
  id        Int      @id @default(autoincrement())
  firstName String   @default("First")
  lastName  String   @default("Last")
  email     String   @unique
  password  String
  role      Role     @default(USER)
  Profile   Profile[]
}

enum Condition {
  excellent
  good
  fair
  poor
}

model Stuff {
  id        Int       @id @default(autoincrement())
  name      String
  quantity  Int
  condition Condition @default(good)
  owner     String
}

enum Commute {
  Dorm
  Commuter
  Other
}

enum Year {
  Freshman
  Sophomore
  Junior
  Senior
  Graduate
}

model Chat {
    id        Int      @id @default(autoincrement())
    contactId Int
    chat      String
    owner     String
    isRead    Boolean  @default(false)
    createdAt DateTime @default(now())
    Profile   Profile  @relation(fields: [contactId], references: [id])
}

enum Location {
  ArchitectureSchool
  AgriculturalScience
  ArtBuilding
  BachmanHall
  BilgerHall
  BiomedicalSciences
  BurnsHall
  CenterforKoreanStudies
  CrawfordHall
  DanceBuilding
  DeanHall
  EdmondsonHall
  FrearHall
  GartleyHall
  GeorgeHall
  GilmoreHall
  HawaiiHall
  HemenwayHall
  HenkeHall
  HolmesHall
  InformationTechnologyCenter
  JeffersonHall
  JohnsonHall
  JohnABurnsSchoolofMedicine
  KamakakuokalaniCenterforHawaiianStudies
  KellerHall
  KennedyTheatre
  KraussHall
  KuykendallHall
  LawSchool
  LincolnHall
  MarineSciencesBuilding
  MillerHall
  MooreHall
  MusicBuildingComplex
  PacificBiosciencesResearchCenter
  PacificOceanScienceandTechnology
  PhysicalPlantBuilding
  PhysicalScienceBuilding
  PopeLaboratory
  SakamakiHall
  SaundersHall
  ShermanLaboratory
  ShidlerCollegeofBusiness
  SnyderHall
  SpaldingHall
  StJohnPlantScienceLab
  WatanabeHall
  WebsterHall
  Other
}

enum Days {
  M
  T
  W
  R
  F
  Other
}

model Class {
  id          Int       @id @default(autoincrement())
  name        String
  startTime   String
  endTime     String
  location    Location
  days        Days[]
  email       String
  Profile     Profile @relation(fields: [email], references: [email], onDelete: SetNull) // Keeps Profile even if Class is deleted
}

model Profile {
  id          Int       @id @default(autoincrement())
  firstName   String
  lastName    String
  email       String    @unique 
  description String
  note        Chat[]
  year        Year
  major       String
  likes       String
  mbti        String
  commute     Commute
  clubs       String
  languages   String
  classes     Class[]
  User        User  @relation(fields: [email], references: [email]) // Also owner of the profile
  accepts     Profile[] @relation("LikesGiven")
  acceptedBy  Profile[] @relation("LikesGiven")
  matches     Profile[] @relation("MatchedProfiles")
  matchedBy   Profile[] @relation("MatchedProfiles")
}
